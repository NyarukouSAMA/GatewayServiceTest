{
  "ConnectionStrings": {
    "DefaultConnection": "Server=host.docker.internal;Port=5432;Database=proxy;User Id=proxyadm;Password=proxyadm",
    "RedisConnection": "host.docker.internal:6379"
  },
  "Serilog": {
    "Using": [ "Serilog.Sinks.File" ],
    "MinimumLevel": "Information",
    "WriteTo": [
      {
        "Name": "Console"
      },
      {
        "Name": "File",
        "Args": {
          "path": "Logs/log.txt",
          "rollingInterval": "Day",
          "outputTemplate": "{Timestamp:yyyy-MM-dd HH:mm:ss.fff zzz} [{Level:u3}] {Message:lj}{NewLine}{Exception}"
        }
      }
    ]
  },
  "RequestLog": {
    "Using": [ "Serilog.Sinks.File", "Serilog.Sinks.RabbitMQ" ],
    "MinimumLevel": "Information",
    "WriteTo": [
      {
        "Name": "Console"
      },
      {
        "Name": "File",
        "Args": {
          "path": "Logs/requestlog.txt",
          "rollingInterval": "Day",
          "outputTemplate": "{Timestamp:yyyy-MM-dd HH:mm:ss.fff zzz} [{Level:u3}] {Message:lj}{NewLine}{Exception}"
        }
      },
      {
        "Name": "RabbitMQ",
        "Args": {
          "hostnames": [ "host.docker.internal" ],
          "username": "guest",
          "password": "guest",
          "exchange": "request_log_exchange",
          "routeKey": "request_log",
          "port": 5672,
          "exchangeType": "direct",
          "deliveryMode": "Durable",
          "formatter": "Serilog.Formatting.Json.JsonFormatter, Serilog"
        }
      }
    ]
  },
  "AllowedHosts": "*",
  "KeyCloak": {
    "KeyCloakDomain": "http://host.docker.internal:8080",
    "KeyCloakRealm": "testrealm"
  },
  "Proxy": {
    "SuggestionApiBaseUrl": "https://api.suggestion.com/",
    "SuggestionApiPrefix": "suggestion/prefix",
    "SuggestionApiToken": "your_suggestion_api_token",
    "SuggestionApiTimeoutInSeconds": 15,
    "CleanerApiBaseUrl": "https://api.cleaner.com/",
    "CleanerApiPrefix": "cleaner/prefix",
    "CleanerApiToken": "your_cleaner",
    "CleanerApiTimeoutInSeconds": 15
  },
  "Mockups": {
    "MockupJWTRegistration": true,
    "BillingMockup": false,
    "ClientIdentificationMockup": false,
    "ProxyMockup": true,
    "MethodInfoMockup": false
  }
}
